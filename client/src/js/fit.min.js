!(function (e) {
	"object" == typeof exports && "object" == typeof module
		? (module.exports = e(require("./xterm.min.js")))
		: "function" == typeof define
		? define(["../../xterm"], e)
		: e(window.Terminal);
})(function (e) {
	var t = {
		proposeGeometry: function (e) {
			if (!e.element.parentElement) return null;
			var t,
				n,
				r,
				o = window.getComputedStyle(e.element.parentElement),
				i = parseInt(o.getPropertyValue("height")),
				p = Math.max(0, parseInt(o.getPropertyValue("width")) - 17),
				a = window.getComputedStyle(e.element),
				l = i - (parseInt(a.getPropertyValue("padding-top")) + parseInt(a.getPropertyValue("padding-bottom"))),
				s = p - (parseInt(a.getPropertyValue("padding-right")) + parseInt(a.getPropertyValue("padding-left"))),
				u = (e.rowContainer, e.rowContainer.firstElementChild),
				d = u.innerHTML;
			return (
				(u.style.display = "inline"),
				(u.innerHTML = "W"),
				(r = u.getBoundingClientRect().width),
				(u.style.display = ""),
				(t = u.getBoundingClientRect().height),
				(u.innerHTML = d),
				(n = parseInt(l / t)),
				{ cols: parseInt(s / r), rows: n }
			);
		},
		fit: function (e) {
			var n = t.proposeGeometry(e);
			n && e.resize(n.cols, n.rows);
		},
	};
	return (
		(e.prototype.proposeGeometry = function () {
			return t.proposeGeometry(this);
		}),
		(e.prototype.fit = function () {
			return t.fit(this);
		}),
		t
	);
});
